@page "/"
@using System.Security.Claims
@using ITS.CPER.InternalWebPage.Data.Models;
@using ITS.CPER.InternalWebPage.Data.Services;
@using MudBlazor;
@inject IDataAccess _dataAccess

<style>
    body {
        background-color: #ADE8F4;
        padding: 50px;
        display: flex;
        margin: 0;
    }

    .spaceCards {
        height: 550px;
    }

    .card1 {
        background-color: #03045E;
        height: 500px;
        border-top-left-radius: 25px;
        border-bottom-left-radius: 25px;
        width: 25%;
        float: left;
    }

        .card1 .leftside {
            display: flex;
            width: 100%;
            height: 100%;
            background-color: #03045E;
            border-top-left-radius: 25px;
            border-bottom-left-radius: 25px;
            border-top-right-radius: 0px;
            border-bottom-right-radius: 0px;
            padding: 50px;
        }

            .card1 .leftside .sessionCard {
                border-radius: 25px;
                width: 100%;
                height: 100%;
            }

    .card2 {
        background-color: #0077B6;
        height: 500px;
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
        border-top-right-radius: 25px;
        border-bottom-right-radius: 25px;
        width: 75%;
        float: right;
    }

        .card2 .rightside {
            background-color: #0077B6;
            width: 100%;
            height: 100%;
            padding: 50px;
            float: right;
            border-top-left-radius: 0px;
            border-bottom-left-radius: 0px;
            border-top-right-radius: 25px;
            border-bottom-right-radius: 25px;
        }

            .card2 .rightside .distanceCard {
                margin-top: 30px;
                border-radius: 25px;
                width: 25%;
                height: 25%;
                box-shadow: 0px 5px 20px #48CAE4;
            }

            .card2 .rightside .poolsCard {
                margin-top: 20px;
                border-radius: 25px;
                width: 25%;
                height: 25%;
                box-shadow: 0px 5px 20px #48CAE4;
            }

            .card2 .rightside .heartbeatCard {
                margin-top: 20px;
                border-radius: 25px;
                width: 25%;
                height: 25%;
                box-shadow: 0px 5px 20px #48CAE4;
            }

            .card2 .rightside .chart {
                display: flex;
                margin-top: -375px;
                margin-left: 30%;
                border-radius: 25px;
                padding-left: 10px;
                padding-right: 10px;
            }

            .progressCircle{
                margin-top: 16%;
                margin-right: 53%;
                margin-left: 47%;
            }
</style>

<PageTitle>HomePage</PageTitle>

@if (smartwatch_data != null && smartwatch_data.Count() != 0)
{
    @if (ListOfDates.Count > 0)
    {
        <MudCarousel Class="mud-width-full" Style="height:500px; border-radius: 25px;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
        @foreach (var data in smartwatch_data)
        {
        <MudCarouselItem Transition="Transition.Fade">
            <div class="spaceCards">
                <MudPaper Class="card1" Elevation="2">
                    <MudPaper Class="leftside" Elevation="0">
                                <MudCard Class="sessionCard" Elevation="0" Style="background-color:#03045E;">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    @*<MudImage Style="width: 60%" Src="images/circlePersonSwim.jpeg" Alt="person swim" />*@
                                    <MudImage Style="width: 80%; border-radius:10px;" Src="images/sea-monkey.gif" Alt="person swim" />
                                    <div style="color: white; margin-top: 10px;">
                                        <MudText Typo="Typo.h6">Session #@(Array.IndexOf(ListOfAverageHeartbeat.Values.ToArray(), ListOfAverageHeartbeat[data.Activity_Id]) + 1)</MudText>
                                        <MudText Style="display: flex; flex-direction: row; align-items: center;">
                                        </MudText>
                                    </div>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent Class="startEnd">
                                <br />
                                <MudText Style="color:white;">Start: @ListOfDates[data.Activity_Id].First()</MudText>
                                <MudText Style="color:white;">End: @ListOfDates[data.Activity_Id].Last()</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudPaper>
                </MudPaper>
                <MudPaper Class="card2" Elevation="2">
                    <MudPaper Class="rightside" Elevation="0">
                        <MudCard Class="distanceCard">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Distance</MudText>
                                    <MudText>@data.Distance m</MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Icon="@Icons.Material.Filled.CompareArrows" Style="pointer-events: none;" Color="Color.Primary" aria-label="heart rate"></MudIconButton>
                                </CardHeaderActions>
                            </MudCardHeader>
                        </MudCard>
                        <MudCard Class="poolsCard">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Pool Laps</MudText>
                                    <MudText>N: @data.NumberOfPoolLaps</MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Icon="@Icons.Material.Filled.Pool" Style="pointer-events: none;" Color="Color.Primary" aria-label="heart rate"></MudIconButton>
                                </CardHeaderActions>
                            </MudCardHeader>
                        </MudCard>
                        <MudCard Class="heartbeatCard">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Avg Pulse Rate</MudText>
                                    <MudText>
                                            @(ListOfAverageHeartbeat[data.Activity_Id].FirstOrDefault()) bpm
                                    </MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Style="pointer-events: none;" Icon="@Icons.Material.Filled.MonitorHeart" Color="Color.Error" aria-label="heart rate"></MudIconButton>
                                </CardHeaderActions>
                            </MudCardHeader>
                        </MudCard>
                        <MudPaper Class="chart">
                            <MudChart ChartType="ChartType.Line" Color="#F44336"
                            ChartSeries="@(tmp[data.Activity_Id])"
                            XAxisLabels="@(ListOfDates[data.Activity_Id])"
                            Width="100%" Height="350px"></MudChart>
                        </MudPaper>
                    </MudPaper>
                </MudPaper>
            </div>
        }
            </MudCarouselItem>
    }
        </MudCarousel>
    }else{
        <MudProgressCircular Class="progressCircle" Color="Color.Default" Style="height:70px; width:70px;" Indeterminate="true" />
    }

}
else
{

    <div class="spaceCards">
        <MudPaper Class="card1" Elevation="2">
            <MudPaper Class="leftside" Elevation="0">
                <MudCard Class="sessionCard" Elevation="0">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">No session started</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.WaterDrop" Color="Color.Primary" Style="pointer-events: none;" aria-label="add to favorite"></MudIconButton>
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent Class="startEnd">
                        <MudText Typo="Typo.button">ID: 0000-0000-0000-0000</MudText>
                        <br />
                        <br />
                        <MudText>Start: ...</MudText>
                        <MudText>End: ...</MudText>
                    </MudCardContent>
                </MudCard>
            </MudPaper>
        </MudPaper>
        <MudPaper Class="card2" Elevation="2">
            <MudPaper Class="rightside" Elevation="0">
                <MudCard Class="distanceCard">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Distance</MudText>
                            <MudText>0 m</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.CompareArrows" Style="pointer-events: none;" Color="Color.Primary" aria-label="heart rate"></MudIconButton>
                        </CardHeaderActions>
                    </MudCardHeader>
                </MudCard>
                <MudCard Class="poolsCard">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Pool Laps</MudText>
                            <MudText>N: 0</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Pool" Style="pointer-events: none;" Color="Color.Primary" aria-label="heart rate"></MudIconButton>
                        </CardHeaderActions>
                    </MudCardHeader>
                </MudCard>
                <MudCard Class="heartbeatCard">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Pulse Rate</MudText>
                            <MudText>0 bpm</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Style="pointer-events: none;" Icon="@Icons.Material.Filled.MonitorHeart" Color="Color.Error" aria-label="heart rate"></MudIconButton>
                        </CardHeaderActions>
                    </MudCardHeader>
                </MudCard>
                <MudPaper Class="chart">
                    @*<MudChart ChartType="ChartType.Line" Color="#F44336" ChartSeries="@Series" @bind-SelectedIndex="index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>*@
                </MudPaper>
            </MudPaper>
        </MudPaper>
    </div>
}


@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }
    private bool arrows = true;
    private bool bullets = false;
    private bool enableSwipeGesture = true;
    private bool autocycle = false;
    private Transition transition = Transition.Slide;
    private List<SmartWatch_Data> smartwatch_data = new List<SmartWatch_Data>();
    private Address address = new Address();
    Dictionary<Guid, List<Double>> ListOfAverageHeartbeat = new Dictionary<Guid, List<Double>>();
    Dictionary<Guid, List<ChartSeries>> tmp = new Dictionary<Guid, List<ChartSeries>>();
    Dictionary<Guid, string[]> ListOfDates = new Dictionary<Guid, string[]>();

    ChartSeries Series =
    new ChartSeries()
        {
            Name = "Bpm",
            Data = new double[] { }//heart
        };
    string[] XAxisLabels = { };

    protected override async Task OnInitializedAsync()
    {        
        smartwatch_data = await _dataAccess.GetSmartWatchDataAsync();
    }
    }
}
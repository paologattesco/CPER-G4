@page "/"
@using System.Security.Claims
@using ITS.CPER.InternalWebPage.Data.Models;
@using ITS.CPER.InternalWebPage.Data.Services;
@using MudBlazor;
@inject IDataAccess _dataAccess

<style>
    body {
        background-color: #ADE8F4;
        padding: 50px;
        display: flex;
        margin: 0;
    }

    .spaceCards {
        height: 550px;
    }

    .card1 {
        background-color: #03045E;
        height: 500px;
        border-top-left-radius: 25px;
        border-bottom-left-radius: 25px;
        width: 25%;
        float: left;
    }

        .card1 .leftside {
            display: flex;
            width: 100%;
            height: 100%;
            background-color: #03045E;
            border-top-left-radius: 25px;
            border-bottom-left-radius: 25px;
            border-top-right-radius: 0px;
            border-bottom-right-radius: 0px;
            padding: 50px;
        }

            .card1 .leftside .sessionCard {
                border-radius: 25px;
                width: 100%;
                height: 100%;
            }

    .card2 {
        background-color: #0077B6;
        height: 500px;
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
        border-top-right-radius: 25px;
        border-bottom-right-radius: 25px;
        width: 75%;
        float: right;
    }

        .card2 .rightside {
            background-color: #0077B6;
            width: 100%;
            height: 100%;
            padding: 50px;
            float: right;
            border-top-left-radius: 0px;
            border-bottom-left-radius: 0px;
            border-top-right-radius: 25px;
            border-bottom-right-radius: 25px;
        }

            .card2 .rightside .distanceCard {
                margin-top: 30px;
                border-radius: 25px;
                width: 25%;
                height: 25%;
                box-shadow: 0px 5px 20px #48CAE4;
            }

            .card2 .rightside .poolsCard {
                margin-top: 20px;
                border-radius: 25px;
                width: 25%;
                height: 25%;
                box-shadow: 0px 5px 20px #48CAE4;
            }

            .card2 .rightside .heartbeatCard {
                margin-top: 20px;
                border-radius: 25px;
                width: 25%;
                height: 25%;
                box-shadow: 0px 5px 20px #48CAE4;
            }

            .card2 .rightside .chart {
                display: flex;
                margin-top: -375px;
                margin-left: 30%;
                border-radius: 25px;
                padding-left: 10px;
                padding-right: 10px;
            }

            .progressCircle{
                margin-top: 16%;
                margin-right: 53%;
                margin-left: 47%;
            }
</style>

<PageTitle>HomePage</PageTitle>

@if (smartwatch_data == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>SmartWatch_Id</th>
                <th>Activity_Id</th>
                <th>Latitude</th>
                <th>Longitude</th>
                <th>NumberOfPoolLaps</th>
                <th>Distance</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in smartwatch_data)
            {
                <tr>
                    <td>@data.SmartWatch_Id</td>
                    <td>@data.Activity_Id</td>
                    <td>@data.Initial_Latitude</td>
                    <td>@data.Initial_Longitude</td>
                    <td>@data.NumberOfPoolLaps</td>
                    <td>@data.Distance</td>

                </tr>
            }
        </tbody>
    </table>
}


@code {

    private bool arrows = true;
    private bool bullets = false;
    private bool enableSwipeGesture = true;
    private bool autocycle = false;
    private Transition transition = Transition.Slide;
    private List<SmartWatch_Data> smartwatch_data = new List<SmartWatch_Data>();

    protected override async Task OnInitializedAsync()
    {
        smartwatch_data = await _dataAccess.GetSmartWatchesDataAsync();
    }
}
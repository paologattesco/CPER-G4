@page "/"
@using System.Security.Claims
@using ITS.CPER.InternalWebPage.Data.Models;
@using ITS.CPER.InternalWebPage.Data.Services;
@using MudBlazor;
@inject IDataAccess _dataAccess

<style>
    body {
        background-color: #ADE8F4;
        padding: 50px;
        display: flex;
        margin: 0;
    }

    .spaceCards {
        height: 550px;
    }

    .card1 {
        background-color: #03045E;
        height: 500px;
        border-top-left-radius: 25px;
        border-bottom-left-radius: 25px;
        width: 25%;
        float: left;
    }

        .card1 .leftside {
            display: flex;
            width: 100%;
            height: 100%;
            background-color: #03045E;
            border-top-left-radius: 25px;
            border-bottom-left-radius: 25px;
            border-top-right-radius: 0px;
            border-bottom-right-radius: 0px;
            padding: 50px;
        }

            .card1 .leftside .sessionCard {
                border-radius: 25px;
                width: 100%;
                height: 100%;
            }

    .card2 {
        background-color: #0077B6;
        height: 500px;
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
        border-top-right-radius: 25px;
        border-bottom-right-radius: 25px;
        width: 75%;
        float: right;
    }

        .card2 .rightside {
            background-color: #0077B6;
            width: 100%;
            height: 100%;
            padding: 50px;
            float: right;
            border-top-left-radius: 0px;
            border-bottom-left-radius: 0px;
            border-top-right-radius: 25px;
            border-bottom-right-radius: 25px;
        }

            .card2 .rightside .distanceCard {
                margin-top: 30px;
                border-radius: 25px;
                width: 25%;
                height: 25%;
                box-shadow: 0px 5px 20px #48CAE4;
            }

            .card2 .rightside .poolsCard {
                margin-top: 20px;
                border-radius: 25px;
                width: 25%;
                height: 25%;
                box-shadow: 0px 5px 20px #48CAE4;
            }

            .card2 .rightside .heartbeatCard {
                margin-top: 20px;
                border-radius: 25px;
                width: 25%;
                height: 25%;
                box-shadow: 0px 5px 20px #48CAE4;
            }

            .card2 .rightside .chart {
                display: flex;
                margin-top: -375px;
                margin-left: 30%;
                border-radius: 25px;
                padding-left: 10px;
                padding-right: 10px;
            }

            .progressCircle{
                margin-top: 16%;
                margin-right: 53%;
                margin-left: 47%;
            }
</style>

<PageTitle>HomePage</PageTitle>

@if (smartwatch_data == null || heartbeat_data.Count() == 0)
{
    <MudProgressCircular Class="progressCircle" Color="Color.Default" Style="height:70px; width:70px;" Indeterminate="true" />
}
else
{
    <MudTable Items="@smartwatch_data" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh><strong>SmartWatch_Id</strong></MudTh>
            <MudTh><strong>Activity_Id</strong></MudTh>
            <MudTh><strong>Latitude</strong></MudTh>
            <MudTh><strong>Longitude</strong></MudTh>
            <MudTh><strong>Heartbeat</strong></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="SmartWatch_Id">@context.SmartWatch_Id</MudTd>
            <MudTd DataLabel="Activity_Id">@context.Activity_Id</MudTd>
            @if (@context.Initial_Latitude >= 50 || @context.Initial_Latitude <= -50)
            {
                <MudTd DataLabel="Initial_Latitude">superato la soglia</MudTd>
            }else{
                <MudTd DataLabel="Initial_Latitude">tutto ok</MudTd>
            }

            @if (@context.Initial_Longitude >= 180 || @context.Initial_Longitude <= -180)
            {
                <MudTd DataLabel="Initial_Longitude">superato la soglia</MudTd>
            }else{
                <MudTd DataLabel="Initial_Longitude">tutto ok</MudTd>
            }

            @*<MudTd DataLabel="Heartbeat">@heartbeat_data</MudTd>*@

            @*<MudTd DataLabel="Heartbeat">@context.Heartbeat</MudTd>*@
            @foreach(var prova in heartbeat_data)
            {
                <MudTd DataLabel="Heartbeat">@prova.Heartbeat</MudTd>

            @*@if (@heartbeat_data.LastOrDefault().Heartbeat >= 150 || @heartbeat_data.LastOrDefault().Heartbeat <= -30)
                {
                <MudTd DataLabel="Heartbeat">@heartbeat_data.LastOrDefault().Heartbeat</MudTd>
                }
                else
                {
                <MudTd DataLabel="Heartbeat">@heartbeat_data.LastOrDefault().Heartbeat</MudTd>
                }*@
            }
            

        </RowTemplate>
    </MudTable>
}


@code {
    private bool _loading=false;
    private List<SmartWatch_Data> smartwatch_data = new List<SmartWatch_Data>();
    private List<Heartbeat_Data> heartbeat_data = new List<Heartbeat_Data>();

    protected override async Task OnInitializedAsync()
    {
        smartwatch_data = await _dataAccess.GetSmartWatchesDataAsync();
        foreach (var data in smartwatch_data)
        {
            heartbeat_data = await _dataAccess.HeartbeatQuery(data);
        }
    }
}
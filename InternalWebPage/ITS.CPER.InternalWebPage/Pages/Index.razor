@page "/"
@using System.Security.Claims
@using ITS.CPER.InternalWebPage.Data.Models;
@using ITS.CPER.InternalWebPage.Data.Services;
@using MudBlazor;
@inject IDataAccess _dataAccess

<PageTitle>HomePage</PageTitle>

@if (smartwatch_data == null)
{
    <MudProgressCircular Class="progressCircle" Color="Color.Default" Style="height:70px; width:70px;" Indeterminate="true" />
}
else
{
  
    List<Guid> SmartWatchesList = new List<Guid>();
    //DA METTERE UN SOLO SMARTWATCH
    <MudTable Items="@smartwatch_data" Style="border-radius: 20px;" Hover="true" Breakpoint="Breakpoint.Sm">

        <ColGroup>
            <col style="width:200px;" />
            <col style="width:400px;" />
            <col style="width:400px;" />
            <col style="width:255px;" />
        </ColGroup>
        
        <HeaderContent>
            <MudTh></MudTh>
            <MudTh Style="text-align:center;"><strong>SmartWatch_Id</strong></MudTh>
            <MudTh Style="text-align:center;"><strong>Production_Batch</strong></MudTh>
            <MudTh Style="text-align:center;"><strong>Status</strong></MudTh>
        </HeaderContent>
        
        <RowTemplate>

            <MudTd><MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="@(() => ShowBtnPress(context.SmartWatch_Id))">@((context.ShowSmartWatchDetails == false) ? "▼" : "▲") Details</MudButton></MudTd>
            <MudTd DataLabel="SmartWatch_Id" Style="text-align:center;">@context.SmartWatch_Id</MudTd>

            <MudTd DataLabel="ProdBatch" Style="text-align:center;">prod a caso</MudTd>

            @*SCOMMENTARE SOTTO SOLO SE SIAMO IN ITS*@
@*            <MudTd DataLabel="ProdBatch">@production_batch[context.SmartWatch_Id]</MudTd>
*@            @if (context.Final_Latitude > 90 || context.Final_Latitude < -90 || context.Final_Longitude > 180 || context.Final_Longitude < -180 || context.Heartbeat > 200 || context.Heartbeat < 30)
            {
                <MudTd Style="color: firebrick; text-align:center;">🔴 Anomaly</MudTd>
            }
            else
            {
                <MudTd Style="color: green; text-align:center;">🟢 Ok</MudTd>
            }
        </RowTemplate>
        <ChildRowContent>

                @if (context.ShowSmartWatchDetails)
                {
                    <MudTr>
                        <td colspan="4">
                            <MudCard Elevation="0">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Typo="Typo.body1">Data details for SmartWatch <strong>@context.SmartWatch_Id</strong></MudText>
                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudCardContent Class="pa-0">
                                    <MudTable Items="@AllActivities.Where(x => x.Value.Any(y => y.SmartWatch_Id == context.SmartWatch_Id)).ToList()" Context="ActivityContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
                                    <ColGroup>
                                        <col style="width:200px;" />
                                        <col style="width:400px;" />
                                        <col style="width:400px;" />
                                        <col style="width:255px;" />
                                    </ColGroup>

                                    <HeaderContent>
                                        <MudTh></MudTh>
                                        <MudTh Style="text-align:center;"><strong>Activity_Id</strong></MudTh>
                                        <MudTh></MudTh>
                                        <MudTh></MudTh>
                                    </HeaderContent>
                                        <RowTemplate>
                                            <MudTd><MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="@(() => ShowBtnPressActivities(ActivityContext.Key))">@(
                                        (ActivityContext.Value.Select(x => x.ShowActivityDetails.Equals(false)).FirstOrDefault()) ? "▼" : "▲"
                                        ) Details</MudButton></MudTd>

                                    <MudTd DataLabel="Activity_Id" Style="text-align:center;">@ActivityContext.Key</MudTd>
                                    <MudTd></MudTd>
                                    @if (ActivityContext.Value.Any(a => a.Final_Latitude > 90) || ActivityContext.Value.Any(a => a.Final_Latitude < -90) || ActivityContext.Value.Any(a => a.Final_Longitude > 180) || ActivityContext.Value.Any(a => a.Final_Longitude < -180) || ActivityContext.Value.Any(a => a.Heartbeat > 200) || ActivityContext.Value.Any(a => a.Heartbeat < 30))
                                    {
                                        <MudTd Style="color: firebrick; text-align:center;">🔴 Anomaly</MudTd>
                                    }
                                    else
                                    {
                                        <MudTd Style="color: green; text-align:center;">🟢 Ok</MudTd>
                                    }
                                </RowTemplate>
                                <ChildRowContent>
                                    @if (ActivityContext.Value.Select(x => x.ShowActivityDetails.Equals(true)).FirstOrDefault())
                                    {
                                        <MudTr>
                                            <td colspan="4">
                                                <MudCard Elevation="0">
                                                    <MudCardHeader>
                                                        <CardHeaderContent>
                                                                <MudText Typo="Typo.body1">Data details for Activity <strong>@ActivityContext.Key</strong></MudText>
                                                        </CardHeaderContent>
                                                    </MudCardHeader>
                                                    <MudCardContent Class="pa-0">
                                                            <MudTable Items="@AllActivities[ActivityContext.Key]" Context="DetailsContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
                                                            <HeaderContent>
                                                                <MudTh><strong>Latitude</strong></MudTh>
                                                                <MudTh><strong>Longitude</strong></MudTh>
                                                                <MudTh><strong>Heartbeat</strong></MudTh>
                                                            </HeaderContent>
                                                            <RowTemplate>
                                                                @if (DetailsContext.Final_Latitude > 90 || DetailsContext.Final_Latitude < -90)
                                                            {
                                                                <MudTd DataLabel="Final_Latitude" Style="color: firebrick">@DetailsContext.Final_Latitude</MudTd>
                                                            }
                                                            else
                                                            {
                                                                <MudTd DataLabel="Final_Latitude">@DetailsContext.Final_Latitude</MudTd>
                                                            }

                                                            @if (DetailsContext.Final_Longitude > 180 || DetailsContext.Final_Longitude < -180)
                                                            {
                                                                <MudTd DataLabel="Final_Longitude" Style="color: firebrick">@DetailsContext.Final_Longitude</MudTd>
                                                            }
                                                            else
                                                            {
                                                                <MudTd DataLabel="Final_Longitude">@DetailsContext.Final_Longitude</MudTd>
                                                            }

                                                            @if (DetailsContext.Heartbeat > 200 || DetailsContext.Heartbeat < 30)
                                                            {
                                                                <MudTd DataLabel="Heartbeat" Style="color: firebrick">@DetailsContext.Heartbeat</MudTd>
                                                            }
                                                            else
                                                            {
                                                                <MudTd DataLabel="Heartbeat">@DetailsContext.Heartbeat</MudTd>
                                                            }
                                                            </RowTemplate>
                                                        </MudTable>
                                                    </MudCardContent>
                                                </MudCard>
                                            </td>
                                        </MudTr>
                                        }
                                    </ChildRowContent>
                                    </MudTable>
                                </MudCardContent>
                            </MudCard>
                        </td>
                    </MudTr>
                }
            
            </ChildRowContent>
        </MudTable>
}


@code {
    private List<SmartWatch> ListOfSmartWatchesActivities = new List<SmartWatch>();
    private List<SmartWatch> smartwatch_data = new List<SmartWatch>();
    private List<Activity> activity_data = new List<Activity>();
    private List<HeartBeat> heartbeat_data = new List<HeartBeat>();
    private Activity tmp = new Activity();
    private Dictionary<Guid, Guid> production_batch = new Dictionary<Guid, Guid>();
    private Dictionary<Guid, List<Activity>> AllActivities = new Dictionary<Guid, List<Activity>>();
    protected override async Task OnInitializedAsync()
    {
        ListOfSmartWatchesActivities = await _dataAccess.GetSmartWatchesDataAsync();
        //production_batch = await _dataAccess.GetProductionBatch();
        foreach (var data in ListOfSmartWatchesActivities)
        {
            activity_data = await _dataAccess.ActivitiesQuery(data);
            AllActivities.Add(data.Activity_Id, activity_data);

            //var a = AllActivities.Where(x => x.Value.Any(y => y.SmartWatch_Id == data.SmartWatch_Id)).ToList();
            //var c = a.ForEach(x => x.Value.Any(a => a.Final_Latitude < 90));
            var HeartAnomaly = activity_data.Where(x => x.Heartbeat < 30 || x.Heartbeat > 200).ToList();
            var heartOk = activity_data[0].Heartbeat;

            if(HeartAnomaly.Count != 0)
            {
                foreach (var item in ListOfSmartWatchesActivities.Where(x => x.Activity_Id == data.Activity_Id))
                {
                    item.Heartbeat = Convert.ToInt32(HeartAnomaly[0].Heartbeat);
                }
            }
            else
            {
                foreach (var item in ListOfSmartWatchesActivities.Where(x => x.Activity_Id == data.Activity_Id))
                {
                    item.Heartbeat = Convert.ToInt32(heartOk);
                }
            }
        }
        
        
        smartwatch_data = ListOfSmartWatchesActivities
        .GroupBy(obj => obj.SmartWatch_Id)
        .Select(group => group.First())
        .ToList();
        //var a = AllActivities.Where(x => x.Value.Any(y => y.SmartWatch_Id == ListOfSmartWatchesActivities.SmartWatch_Id)).ToList();
        //var c = 0;
    }
    private void ShowBtnPress(Guid id)
    {
        SmartWatch tmpData = smartwatch_data.First(f => f.SmartWatch_Id == id);
        tmpData.ShowSmartWatchDetails = !tmpData.ShowSmartWatchDetails;
    }

    private void ShowBtnPressActivities(Guid id)
    {
        Activity tmpData = AllActivities[id].First();
        tmpData.ShowActivityDetails = !tmpData.ShowActivityDetails;
    }
}
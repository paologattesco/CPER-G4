@page "/"
@inject IDataAccess _dataAccess
@using System.Security.Claims
@using ITS.CPER.WebPage.Data.Models
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>HomePage</PageTitle>
<AuthorizeView>
    <Authorized>
        <style>
            body {
                background-color: #ADE8F4;
                padding: 50px;
                display: flex;
                margin: 0;
            }

            .spaceCards {
                height: 550px;
            }

            .card1 {
                background-color: #03045E;
                height: 500px;
                border-top-left-radius: 25px;
                border-bottom-left-radius: 25px;
                width: 25%;
                float: left;
            }

                .card1 .leftside {
                    display: flex;
                    width: 100%;
                    height: 100%;
                    background-color: #03045E;
                    border-top-left-radius: 25px;
                    border-bottom-left-radius: 25px;
                    border-top-right-radius: 0px;
                    border-bottom-right-radius: 0px;
                    padding: 50px;
                }

                    .card1 .leftside .sessionCard {
                        border-radius: 25px;
                        width: 100%;
                        height: 100%;
                        box-shadow: 0px 5px 20px #0077B6;
                    }

            /*.card .leftside .sessionCard .startEnd{

                                                }*/

            .card2 {
                background-color: #0077B6;
                height: 500px;
                border-top-left-radius: 0px;
                border-bottom-left-radius: 0px;
                border-top-right-radius: 25px;
                border-bottom-right-radius: 25px;
                width: 75%;
                float: right;
            }

                .card2 .rightside {
                    background-color: #0077B6;
                    width: 100%;
                    height: 100%;
                    padding: 50px;
                    float: right;
                    border-top-left-radius: 0px;
                    border-bottom-left-radius: 0px;
                    border-top-right-radius: 25px;
                    border-bottom-right-radius: 25px;
                }

                    .card2 .rightside .distanceCard {
                        margin-top: 30px;
                        border-radius: 25px;
                        width: 25%;
                        height: 25%;
                        box-shadow: 0px 5px 20px #48CAE4;
                    }

                    .card2 .rightside .poolsCard {
                        margin-top: 20px;
                        border-radius: 25px;
                        width: 25%;
                        height: 25%;
                        box-shadow: 0px 5px 20px #48CAE4;
                    }

                    .card2 .rightside .heartbeatCard {
                        margin-top: 20px;
                        border-radius: 25px;
                        width: 25%;
                        height: 25%;
                        box-shadow: 0px 5px 20px #48CAE4;
                    }

                    .card2 .rightside .chart {
                        display: flex;
                        margin-top: -375px;
                        margin-left: 30%;
                        border-radius: 25px;
                    }
        </style>
        @if (smartwatch_data != null && smartwatch_data.Count() != 0 && heartbeat_data != null && heartbeat_data.Count() != 0)
        {
            int i = 1;
            int prova = 0;
            <MudCarousel Class="mud-width-full" Style="height:500px; border-radius: 25px;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
                @foreach (var data in smartwatch_data)
                {
                    <MudCarouselItem Transition="transition" Color="@Color.Primary">
                        <div class="spaceCards">
                            <MudPaper Class="card1" Elevation="2">
                                <MudPaper Class="leftside" Elevation="0">
                                    <MudCard Class="sessionCard" Elevation="0">
                                        <MudCardHeader>
                                            <CardHeaderContent>
                                                <MudText Typo="Typo.h6">Session #@(i++)</MudText>
                                                </CardHeaderContent>
                                                <CardHeaderActions>
                                                    <MudIconButton Icon="@Icons.Material.Filled.WaterDrop" Color="Color.Primary" Style="pointer-events: none;" aria-label="add to favorite"></MudIconButton>
                                                </CardHeaderActions>
                                            </MudCardHeader>
                                            <MudCardContent Class="startEnd">
                                                <MudText Typo="Typo.button">ID: @data.Activity_Id</MudText>
                                                <br />
                                                <br />
                                                <MudText>Start: @data.Initial_Latitude, @data.Initial_Longitude</MudText>
                                                <MudText>End: @data.Final_Latitude, @data.Final_Longitude</MudText>
                                            </MudCardContent>
                                        </MudCard>
                                    </MudPaper>
                                </MudPaper>
                                <MudPaper Class="card2" Elevation="2">
                                    <MudPaper Class="rightside" Elevation="0">
                                        <MudCard Class="distanceCard">
                                            <MudCardHeader>
                                                <CardHeaderContent>
                                                    <MudText Typo="Typo.h6">Distance</MudText>
                                                    <MudText>@data.Distance m</MudText>
                                                </CardHeaderContent>
                                                <CardHeaderActions>
                                                    <MudIconButton Icon="@Icons.Material.Filled.CompareArrows" Style="pointer-events: none;" Color="Color.Primary" aria-label="heart rate"></MudIconButton>
                                                </CardHeaderActions>
                                            </MudCardHeader>
                                        </MudCard>
                                        <MudCard Class="poolsCard">
                                            <MudCardHeader>
                                                <CardHeaderContent>
                                                    <MudText Typo="Typo.h6">Pool Laps</MudText>
                                                    <MudText>N: @data.NumberOfPoolLaps</MudText>
                                                </CardHeaderContent>
                                                <CardHeaderActions>
                                                    <MudIconButton Icon="@Icons.Material.Filled.Pool" Style="pointer-events: none;" Color="Color.Primary" aria-label="heart rate"></MudIconButton>
                                                </CardHeaderActions>
                                            </MudCardHeader>
                                        </MudCard>
                                        <MudCard Class="heartbeatCard">
                                            <MudCardHeader>
                                                <CardHeaderContent>
                                                    <MudText Typo="Typo.h6">Pulse Rate</MudText>
                                                    @*<MudText>@heartbeat_data bpm</MudText>*@
                                                </CardHeaderContent>
                                                <CardHeaderActions>
                                                    <MudIconButton Style="pointer-events: none;" Icon="@Icons.Material.Filled.MonitorHeart" Color="Color.Error" aria-label="heart rate"></MudIconButton>
                                                </CardHeaderActions>
                                            </MudCardHeader>
                                        </MudCard>
                                        <MudPaper Class="chart">
                                            <MudChart ChartType="ChartType.Line" Color="#F44336" ChartSeries="@Series" @bind-SelectedIndex="index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
                                        </MudPaper>
                                    </MudPaper>
                                </MudPaper>
                            </div>
                        </MudCarouselItem>
                }
            </MudCarousel>
        }
        else
        {

            <div class="spaceCards">
                <MudPaper Class="card1" Elevation="2">
                    <MudPaper Class="leftside" Elevation="0">
                        <MudCard Class="sessionCard" Elevation="0">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">No session started</MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Icon="@Icons.Material.Filled.WaterDrop" Color="Color.Primary" Style="pointer-events: none;" aria-label="add to favorite"></MudIconButton>
                                </CardHeaderActions>
                            </MudCardHeader>
                            <MudCardContent Class="startEnd">
                                <MudText Typo="Typo.button">ID: 0000-0000-0000-0000</MudText>
                                <br />
                                <br />
                                <MudText>Start: ...</MudText>
                                <MudText>End: ...</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudPaper>
                </MudPaper>
                <MudPaper Class="card2" Elevation="2">
                    <MudPaper Class="rightside" Elevation="0">
                        <MudCard Class="distanceCard">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Distance</MudText>
                                    <MudText>0 m</MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Icon="@Icons.Material.Filled.CompareArrows" Style="pointer-events: none;" Color="Color.Primary" aria-label="heart rate"></MudIconButton>
                                </CardHeaderActions>
                            </MudCardHeader>
                        </MudCard>
                        <MudCard Class="poolsCard">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Pool Laps</MudText>
                                    <MudText>N: 0</MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Icon="@Icons.Material.Filled.Pool" Style="pointer-events: none;" Color="Color.Primary" aria-label="heart rate"></MudIconButton>
                                </CardHeaderActions>
                            </MudCardHeader>
                        </MudCard>
                        <MudCard Class="heartbeatCard">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Pulse Rate</MudText>
                                    <MudText>0 bpm</MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Style="pointer-events: none;" Icon="@Icons.Material.Filled.MonitorHeart" Color="Color.Error" aria-label="heart rate"></MudIconButton>
                                </CardHeaderActions>
                            </MudCardHeader>
                        </MudCard>
                        <MudPaper Class="chart">
                            <MudChart ChartType="ChartType.Line" Color="#F44336" ChartSeries="@Series" @bind-SelectedIndex="index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
                        </MudPaper>
                    </MudPaper>
                </MudPaper>
            </div>
        }
        @code {
        private bool arrows = true;
        private bool bullets = false;
        private bool enableSwipeGesture = true;
        private bool autocycle = false;
        private Transition transition = Transition.Slide;
        private List<SmartWatch_Data>? smartwatch_data;
        private List<Heartbeat_Data>? heartbeat_data;

        int index = -1; //default value cannot be 0 -> first selectedindex is 0.

        List<ChartSeries> Series = new List<ChartSeries>()
        {
        new ChartSeries()
        {
        Name = "Bpm",
        Data = new double[] {}
        }
        };
        string[] XAxisLabels = { };

        protected override async Task OnInitializedAsync()
        {
            User_Data _userdata = new User_Data();
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            string user = authState.User.Identity.Name;
            if (user != null)
            {
                _userdata.User_Id = _dataAccess.GetUserId(user);
                smartwatch_data = await _dataAccess.GetSmartWatchDataAsync(_userdata.User_Id);
                foreach (var data in smartwatch_data)
                {
                    heartbeat_data = await _dataAccess.HeartbeatQuery(data);

                    for (int i = 0; i < heartbeat_data.Count(); i++)
                    {
                        Series.Add(new ChartSeries()
                        {
                            Data = new double[] { heartbeat_data.Select(x => x.Heartbeat).ElementAt(i) }
                        });
                        string[] XAxisLabels = { Convert.ToString(heartbeat_data.Select(x => x.Time).ElementAt(i)) };
                    }
                }
            }
        }


        }
    </Authorized>
    <NotAuthorized>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@700" rel="stylesheet">
        <div style="background: #03043a; position: relative;">
            <MudImage ObjectFit="@ObjectFit.Fill" Style="max-width: 100%; max-height: 100%; object-fit: cover; opacity: 0.45;" Src="images/swim.jpg" Alt="Earth4Sport" Elevation="25" />
            <div style="position: absolute; top: 20%; left: 50%; transform: translate(-50%, -50%); text-align: center; color: #0092df; font-size: 48px; font-family: 'Kanit', sans-serif; font-weight: 700; text-shadow: 2px 2px 3px #333;">
                Swim Smarter with Earth4Sport!
            </div>
        </div>
    </NotAuthorized>

</AuthorizeView>